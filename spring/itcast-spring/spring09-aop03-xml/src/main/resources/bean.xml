<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置QueryRunner-->
    <bean id="queryRunner" class="org.apache.commons.dbutils.QueryRunner" scope="prototype" />

    <!--配置beanfactory-->
    <bean id="beanFactory" class="aop.factory.BeanFactory">
        <!-- 注入service -->
        <property name="accountService" ref="accountService"/>
        <!-- 注入事务管理器 -->
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    <!-- 配置Service -->
    <bean id="accountService" class="aop.service.impl.AccountServiceImpl">
        <!-- 注入dao -->
        <property name="accountDao" ref="accountDao" />
    </bean>

    <!--配置Dao对象-->
    <bean id="accountDao" class="aop.dao.impl.AccountDaoImpl">
        <!-- 注入QueryRunner -->
        <property name="queryRunner" ref="queryRunner" />
        <!-- 注入ConnectionUtils -->
        <property name="connectionUtils" ref="connectionUtils" />
    </bean>

    <!--配置代理的service-->
    <bean id="proxyAccountService" factory-bean="beanFactory" factory-method="getAccountService"/>

    <!--第一步：把通知类用 bean 标签配置起来-->
    <!-- 配置事务管理器-->
    <bean id="transactionManager" class="aop.utils.TransactionManager">
        <!-- 注入ConnectionUtils -->
        <property name="connectionUtils" ref="connectionUtils" />
    </bean>

    <!--2.2.2.2 第二步：使用 aop:config 声明 aop 配置-->
    <aop:config>
        <!-- 配置的代码都写在此处 -->
        <!--2.2.2.3 第三步：使用 aop:aspect 配置切面-->
        <aop:aspect id="transactionAdvice" ref="transactionManager">
            <!--配置通知的类型要写在此处-->
            <!--execution:匹配方法的执行(常用)-->
            <!--execution(表达式)-->
            <!--表达式语法：execution([修饰符] 返回值类型 包名.类名.方法名(参数))-->
            <!--写法说明：-->
            <!--全匹配方式：-->
            <!--public void-->
            <!--com.itheima.service.impl.AccountServiceImpl.saveAccount(com.itheima.domain.Account)-->
            <!--访问修饰符可以省略-->
            <!--void-->
            <!--com.itheima.service.impl.AccountServiceImpl.saveAccount(com.itheima.domain.Account)-->
            <!--返回值可以使用*号，表示任意返回值-->
            <!--*-->
            <!--com.itheima.service.impl.AccountServiceImpl.saveAccount(com.itheima.domain.Account)-->
            <!--包名可以使用*号，表示任意包，但是有几级包，需要写几个*-->
            <!--* *.*.*.*.AccountServiceImpl.saveAccount(com.itheima.domain.Account)-->
            <!--使用..来表示当前包，及其子包-->
            <!--* com..AccountServiceImpl.saveAccount(com.itheima.domain.Account)-->
            <!--类名可以使用*号，表示任意类-->
            <!--* com..*.saveAccount(com.itheima.domain.Account)-->
            <!--方法名可以使用*号，表示任意方法-->
            <!--* com..*.*( com.itheima.domain.Account)-->
            <!--参数列表可以使用*，表示参数可以是任意数据类型，但是必须有参数-->
            <!--* com..*.*(*)-->
            <!--参数列表可以使用..表示有无参数均可，有参数可以是任意类型-->
            <!--* com..*.*(..)-->
            <!--全通配方式：-->
            <!--* *..*.*(..)-->
            <!--2.2.2.4 第四步：使用 aop:pointcut 配置切入点表达式-->
            <aop:pointcut id="pointcut1" expression="execution(* aop.service.impl.AccountServiceImpl.*(..))"/>
            <!--&lt;!&ndash;用于配置前置通知。指定增强的方法在切入点方法之前执行&ndash;&gt;-->
            <!--<aop:before method="beginTransaction" pointcut-ref="pointcut1"/>-->
            <!--&lt;!&ndash;用于配置后置通知&ndash;&gt;-->
            <!--<aop:after-returning method="commit" pointcut-ref="pointcut1"/>-->
            <!--&lt;!&ndash;aop:after-throwing 用于配置异常通知&ndash;&gt;-->
            <!--<aop:after-throwing method="rollback" pointcut-ref="pointcut1"/>-->
            <!--&lt;!&ndash;用于配置最终通知&ndash;&gt;-->
            <!--<aop:after method="release" pointcut-ref="pointcut1"/>-->

            <!-- 配置环绕通知 -->
            <aop:around method="transactionAround" pointcut-ref="pointcut1"/>
        </aop:aspect>
    </aop:config>
    <!-- 配置Connection的工具类 ConnectionUtils -->
    <bean id="connectionUtils" class="aop.utils.ConnectionUtils">
        <!-- 注入数据源-->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--连接数据库的必备信息-->
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/exercise?serverTimezone=UTC" />
        <property name="user" value="root"/>
        <property name="password" value="root"/>
    </bean>
</beans>